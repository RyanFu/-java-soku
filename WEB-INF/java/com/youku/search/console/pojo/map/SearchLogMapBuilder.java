package com.youku.search.console.pojo.map;

import java.util.Date;
import java.math.BigDecimal;

import org.apache.torque.Torque;
import org.apache.torque.TorqueException;
import org.apache.torque.map.MapBuilder;
import org.apache.torque.map.DatabaseMap;
import org.apache.torque.map.TableMap;
import org.apache.torque.map.ColumnMap;
import org.apache.torque.map.InheritanceMap;

/**
 * ???¡Â????
 *
  *  This class was autogenerated by Torque on:
  *
  * [Thu Nov 25 11:54:15 CST 2010]
  *
  */
public class SearchLogMapBuilder implements MapBuilder
{
    /**
     * The name of this class
     */
    public static final String CLASS_NAME =
        "com.youku.search.console.pojo.map.SearchLogMapBuilder";

    /**
     * The database map.
     */
    private DatabaseMap dbMap = null;

    /**
     * Tells us if this DatabaseMapBuilder is built so that we
     * don't have to re-build it every time.
     *
     * @return true if this DatabaseMapBuilder is built
     */
    public boolean isBuilt()
    {
        return (dbMap != null);
    }

    /**
     * Gets the databasemap this map builder built.
     *
     * @return the databasemap
     */
    public DatabaseMap getDatabaseMap()
    {
        return this.dbMap;
    }

    /**
     * The doBuild() method builds the DatabaseMap
     *
     * @throws TorqueException
     */
    public synchronized void doBuild() throws TorqueException
    {
    	if ( isBuilt() ) {
    		return;
    	}
        dbMap = Torque.getDatabaseMap("searchteleplay");

        dbMap.addTable("search_log");
        TableMap tMap = dbMap.getTable("search_log");
        tMap.setJavaName("SearchLog");
        tMap.setOMClass( com.youku.search.console.pojo.SearchLog.class );
        tMap.setPeerClass( com.youku.search.console.pojo.SearchLogPeer.class );
        tMap.setDescription("???¡Â????");
	    tMap.setPrimaryKeyMethod(TableMap.NATIVE);
        tMap.setPrimaryKeyMethodInfo("search_log");

        ColumnMap cMap = null;


    // ------------- Column: id --------------------
        cMap = new ColumnMap( "id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(true);
  		cMap.setNotNull(true);
        cMap.setJavaName( "Id" );
        cMap.setAutoIncrement(true);
  		cMap.setProtected(false);
      		cMap.setDescription("?¡Â?¨¹id??¡Á???");
        		cMap.setInheritance("false");
                cMap.setSize( 11 );
   	              cMap.setPosition(1);
          tMap.addColumn(cMap);
    // ------------- Column: words --------------------
        cMap = new ColumnMap( "words", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "Words" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("???¡Â??");
        		cMap.setInheritance("false");
                cMap.setSize( 255 );
   	              cMap.setPosition(2);
          tMap.addColumn(cMap);
    // ------------- Column: url --------------------
        cMap = new ColumnMap( "url", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(false);
        cMap.setJavaName( "Url" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("url");
        		cMap.setInheritance("false");
                cMap.setSize( 255 );
   	              cMap.setPosition(3);
          tMap.addColumn(cMap);
    // ------------- Column: stop --------------------
        cMap = new ColumnMap( "stop", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(false);
        cMap.setJavaName( "Stop" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
        		cMap.setDefault("0");
      		cMap.setInheritance("false");
                cMap.setSize( 11 );
   	              cMap.setPosition(4);
          tMap.addColumn(cMap);
    // ------------- Column: search_time --------------------
        cMap = new ColumnMap( "search_time", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(false);
        cMap.setJavaName( "SearchTime" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("?¡À??");
        		cMap.setInheritance("false");
                cMap.setSize( 255 );
   	              cMap.setPosition(5);
          tMap.addColumn(cMap);
    // ------------- Column: update_time --------------------
        cMap = new ColumnMap( "update_time", tMap);
        cMap.setType( new Date() );
        cMap.setTorqueType( "TIMESTAMP" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(false);
        cMap.setJavaName( "UpdateTime" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("?¡À??");
        		cMap.setInheritance("false");
                    cMap.setPosition(6);
          tMap.addColumn(cMap);
        tMap.setUseInheritance(false);
    }
}
