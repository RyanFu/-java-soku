package com.youku.search.console.pojo.map;

import java.util.Date;
import java.math.BigDecimal;

import org.apache.torque.Torque;
import org.apache.torque.TorqueException;
import org.apache.torque.map.MapBuilder;
import org.apache.torque.map.DatabaseMap;
import org.apache.torque.map.TableMap;
import org.apache.torque.map.ColumnMap;
import org.apache.torque.map.InheritanceMap;

/**
 * ??????¡ã?¡À?
 *
  *  This class was autogenerated by Torque on:
  *
  * [Wed Mar 24 10:32:59 CST 2010]
  *
  */
public class PlayVersionMapBuilder implements MapBuilder
{
    /**
     * The name of this class
     */
    public static final String CLASS_NAME =
        "com.youku.search.console.pojo.map.PlayVersionMapBuilder";

    /**
     * The database map.
     */
    private DatabaseMap dbMap = null;

    /**
     * Tells us if this DatabaseMapBuilder is built so that we
     * don't have to re-build it every time.
     *
     * @return true if this DatabaseMapBuilder is built
     */
    public boolean isBuilt()
    {
        return (dbMap != null);
    }

    /**
     * Gets the databasemap this map builder built.
     *
     * @return the databasemap
     */
    public DatabaseMap getDatabaseMap()
    {
        return this.dbMap;
    }

    /**
     * The doBuild() method builds the DatabaseMap
     *
     * @throws TorqueException
     */
    public synchronized void doBuild() throws TorqueException
    {
    	if ( isBuilt() ) {
    		return;
    	}
        dbMap = Torque.getDatabaseMap("searchteleplay");

        dbMap.addTable("play_version");
        TableMap tMap = dbMap.getTable("play_version");
        tMap.setJavaName("PlayVersion");
        tMap.setOMClass( com.youku.search.console.pojo.PlayVersion.class );
        tMap.setPeerClass( com.youku.search.console.pojo.PlayVersionPeer.class );
        tMap.setDescription("??????¡ã?¡À?");
	    tMap.setPrimaryKeyMethod(TableMap.NATIVE);
        tMap.setPrimaryKeyMethodInfo("play_version");

        ColumnMap cMap = null;


    // ------------- Column: id --------------------
        cMap = new ColumnMap( "id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(true);
  		cMap.setNotNull(true);
        cMap.setJavaName( "Id" );
        cMap.setAutoIncrement(true);
  		cMap.setProtected(false);
      		cMap.setDescription("?¡Â?¨¹id??¡Á???");
        		cMap.setInheritance("false");
                cMap.setSize( 11 );
   	              cMap.setPosition(1);
          tMap.addColumn(cMap);
    // ------------- Column: fk_teleplay_id --------------------
        cMap = new ColumnMap( "fk_teleplay_id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "FkTeleplayId" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("??????id");
        		cMap.setInheritance("false");
                cMap.setSize( 11 );
   	              cMap.setPosition(2);
          tMap.addColumn(cMap);
    // ------------- Column: cate --------------------
        cMap = new ColumnMap( "cate", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "Cate" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("????¡¤??¨¤");
        		cMap.setInheritance("false");
                cMap.setSize( 4 );
   	              cMap.setPosition(3);
          tMap.addColumn(cMap);
    // ------------- Column: subcate --------------------
        cMap = new ColumnMap( "subcate", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "Subcate" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("????¡¤??¨¤");
        		cMap.setInheritance("false");
                cMap.setSize( 4 );
   	              cMap.setPosition(4);
          tMap.addColumn(cMap);
    // ------------- Column: name --------------------
        cMap = new ColumnMap( "name", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "Name" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("¡ã?¡À???");
        		cMap.setInheritance("false");
                cMap.setSize( 100 );
   	              cMap.setPosition(5);
          tMap.addColumn(cMap);
    // ------------- Column: view_name --------------------
        cMap = new ColumnMap( "view_name", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "ViewName" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("?¡ã?¡§????¡ã?¡À???");
        		cMap.setInheritance("false");
                cMap.setSize( 100 );
   	              cMap.setPosition(6);
          tMap.addColumn(cMap);
    // ------------- Column: alias --------------------
        cMap = new ColumnMap( "alias", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(false);
        cMap.setJavaName( "Alias" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("¡ã?¡À?¡À???");
        		cMap.setInheritance("false");
                cMap.setSize( 100 );
   	              cMap.setPosition(7);
          tMap.addColumn(cMap);
    // ------------- Column: order_id --------------------
        cMap = new ColumnMap( "order_id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "OrderId" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("???¨°");
        		cMap.setInheritance("false");
                cMap.setSize( 11 );
   	              cMap.setPosition(8);
          tMap.addColumn(cMap);
    // ------------- Column: reverse --------------------
        cMap = new ColumnMap( "reverse", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "Reverse" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("??¡¤?¡¤??¨°");
        		cMap.setInheritance("false");
                cMap.setSize( 11 );
   	              cMap.setPosition(9);
          tMap.addColumn(cMap);
    // ------------- Column: episode_count --------------------
        cMap = new ColumnMap( "episode_count", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "EpisodeCount" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("??????????");
        		cMap.setInheritance("false");
                cMap.setSize( 11 );
   	              cMap.setPosition(10);
          tMap.addColumn(cMap);
    // ------------- Column: total_count --------------------
        cMap = new ColumnMap( "total_count", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "TotalCount" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("¡Á?????");
        		cMap.setInheritance("false");
                cMap.setSize( 11 );
   	              cMap.setPosition(11);
          tMap.addColumn(cMap);
    // ------------- Column: fixed --------------------
        cMap = new ColumnMap( "fixed", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(true);
        cMap.setJavaName( "Fixed" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("??¡¤??????????¨º¡À?");
      		cMap.setDefault("0");
      		cMap.setInheritance("false");
                cMap.setSize( 1 );
   	              cMap.setPosition(12);
          tMap.addColumn(cMap);
    // ------------- Column: firstlogo --------------------
        cMap = new ColumnMap( "firstlogo", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
  		cMap.setNotNull(false);
        cMap.setJavaName( "Firstlogo" );
        cMap.setAutoIncrement(false);
  		cMap.setProtected(false);
      		cMap.setDescription("????????????");
        		cMap.setInheritance("false");
                cMap.setSize( 200 );
   	              cMap.setPosition(13);
          tMap.addColumn(cMap);
        tMap.setUseInheritance(false);
    }
}
