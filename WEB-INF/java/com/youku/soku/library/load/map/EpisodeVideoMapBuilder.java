package com.youku.soku.library.load.map;

import java.util.Date;
import java.math.BigDecimal;

import org.apache.torque.Torque;
import org.apache.torque.TorqueException;
import org.apache.torque.adapter.DB;
import org.apache.torque.map.MapBuilder;
import org.apache.torque.map.DatabaseMap;
import org.apache.torque.map.TableMap;
import org.apache.torque.map.ColumnMap;
import org.apache.torque.map.InheritanceMap;

/**
 * 每部剧集所匹配的视频表
 *
  *  This class was autogenerated by Torque on:
  *
  * [Thu Jun 09 15:44:11 CST 2011]
  *
  */
public class EpisodeVideoMapBuilder implements MapBuilder
{
    /**
     * The name of this class
     */
    public static final String CLASS_NAME =
        "com.youku.soku.library.load.map.EpisodeVideoMapBuilder";

    /**
     * The database map.
     */
    private DatabaseMap dbMap = null;

    /**
     * Tells us if this DatabaseMapBuilder is built so that we
     * don't have to re-build it every time.
     *
     * @return true if this DatabaseMapBuilder is built
     */
    public boolean isBuilt()
    {
        return (dbMap != null);
    }

    /**
     * Gets the databasemap this map builder built.
     *
     * @return the databasemap
     */
    public DatabaseMap getDatabaseMap()
    {
        return this.dbMap;
    }

    /**
     * The doBuild() method builds the DatabaseMap
     *
     * @throws TorqueException
     */
    public synchronized void doBuild() throws TorqueException
    {
        if ( isBuilt() ) {
            return;
        }
        dbMap = Torque.getDatabaseMap("soku_library");

        dbMap.addTable("episode_video");
        TableMap tMap = dbMap.getTable("episode_video");
        tMap.setJavaName("EpisodeVideo");
        tMap.setOMClass( com.youku.soku.library.load.EpisodeVideo.class );
        tMap.setPeerClass( com.youku.soku.library.load.EpisodeVideoPeer.class );
        tMap.setDescription("每部剧集所匹配的视频表");
        tMap.setPrimaryKeyMethod(TableMap.NATIVE);
        DB dbAdapter = Torque.getDB("soku_library");
        if (dbAdapter.getIDMethodType().equals(DB.SEQUENCE))
        {
            tMap.setPrimaryKeyMethodInfo("episode_video_SEQ");
        }
        else if (dbAdapter.getIDMethodType().equals(DB.AUTO_INCREMENT))
        {
            tMap.setPrimaryKeyMethodInfo("episode_video");
        }

        ColumnMap cMap = null;


  // ------------- Column: id --------------------
        cMap = new ColumnMap( "id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(true);
        cMap.setNotNull(true);
        cMap.setJavaName( "Id" );
        cMap.setAutoIncrement(true);
        cMap.setProtected(false);
        cMap.setDescription("Id，自增");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(1);
        tMap.addColumn(cMap);
  // ------------- Column: fk_programme_episode_id --------------------
        cMap = new ColumnMap( "fk_programme_episode_id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "FkProgrammeEpisodeId" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("剧集id");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(2);
        tMap.addColumn(cMap);
  // ------------- Column: video_id --------------------
        cMap = new ColumnMap( "video_id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "VideoId" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("视频id");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(3);
        tMap.addColumn(cMap);
  // ------------- Column: status_notify --------------------
        cMap = new ColumnMap( "status_notify", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "StatusNotify" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("接口更新,0：未更新 1：已经更新 2：更新失败");
        cMap.setDefault("0");
        cMap.setInheritance("false");
        cMap.setSize( 4 );
        cMap.setPosition(4);
        tMap.addColumn(cMap);
  // ------------- Column: shield --------------------
        cMap = new ColumnMap( "shield", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "Shield" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("是否被屏蔽");
        cMap.setDefault("0");
        cMap.setInheritance("false");
        cMap.setSize( 1 );
        cMap.setPosition(5);
        tMap.addColumn(cMap);
  // ------------- Column: source_name --------------------
        cMap = new ColumnMap( "source_name", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "SourceName" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("原始视频名");
        cMap.setInheritance("false");
        cMap.setSize( 100 );
        cMap.setPosition(6);
        tMap.addColumn(cMap);
  // ------------- Column: encode_video_id --------------------
        cMap = new ColumnMap( "encode_video_id", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "EncodeVideoId" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("原始视频id");
        cMap.setInheritance("false");
        cMap.setSize( 50 );
        cMap.setPosition(7);
        tMap.addColumn(cMap);
  // ------------- Column: logo --------------------
        cMap = new ColumnMap( "logo", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Logo" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("视频截图");
        cMap.setInheritance("false");
        cMap.setSize( 200 );
        cMap.setPosition(8);
        tMap.addColumn(cMap);
  // ------------- Column: seconds --------------------
        cMap = new ColumnMap( "seconds", tMap);
        cMap.setType( new Double(0) );
        cMap.setTorqueType( "FLOAT" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Seconds" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("时长");
        cMap.setInheritance("false");
        cMap.setPosition(9);
        tMap.addColumn(cMap);
  // ------------- Column: file_id --------------------
        cMap = new ColumnMap( "file_id", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "FileId" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("file_id");
        cMap.setInheritance("false");
        cMap.setSize( 100 );
        cMap.setPosition(10);
        tMap.addColumn(cMap);
  // ------------- Column: update_time --------------------
        cMap = new ColumnMap( "update_time", tMap);
        cMap.setType( new Date() );
        cMap.setTorqueType( "TIMESTAMP" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "UpdateTime" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("更新时间");
        cMap.setInheritance("false");
        cMap.setPosition(11);
        tMap.addColumn(cMap);
        tMap.setUseInheritance(false);
    }
}
