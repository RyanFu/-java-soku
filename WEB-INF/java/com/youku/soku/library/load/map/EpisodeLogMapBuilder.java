package com.youku.soku.library.load.map;

import java.util.Date;
import java.math.BigDecimal;

import org.apache.torque.Torque;
import org.apache.torque.TorqueException;
import org.apache.torque.adapter.DB;
import org.apache.torque.map.MapBuilder;
import org.apache.torque.map.DatabaseMap;
import org.apache.torque.map.TableMap;
import org.apache.torque.map.ColumnMap;
import org.apache.torque.map.InheritanceMap;

/**
 * 剧集播放链接操作日志
 *
  *  This class was autogenerated by Torque on:
  *
  * [Thu Jun 09 15:34:24 CST 2011]
  *
  */
public class EpisodeLogMapBuilder implements MapBuilder
{
    /**
     * The name of this class
     */
    public static final String CLASS_NAME =
        "com.youku.soku.library.load.map.EpisodeLogMapBuilder";

    /**
     * The database map.
     */
    private DatabaseMap dbMap = null;

    /**
     * Tells us if this DatabaseMapBuilder is built so that we
     * don't have to re-build it every time.
     *
     * @return true if this DatabaseMapBuilder is built
     */
    public boolean isBuilt()
    {
        return (dbMap != null);
    }

    /**
     * Gets the databasemap this map builder built.
     *
     * @return the databasemap
     */
    public DatabaseMap getDatabaseMap()
    {
        return this.dbMap;
    }

    /**
     * The doBuild() method builds the DatabaseMap
     *
     * @throws TorqueException
     */
    public synchronized void doBuild() throws TorqueException
    {
        if ( isBuilt() ) {
            return;
        }
        dbMap = Torque.getDatabaseMap("soku_library");

        dbMap.addTable("episode_log");
        TableMap tMap = dbMap.getTable("episode_log");
        tMap.setJavaName("EpisodeLog");
        tMap.setOMClass( com.youku.soku.library.load.EpisodeLog.class );
        tMap.setPeerClass( com.youku.soku.library.load.EpisodeLogPeer.class );
        tMap.setDescription("剧集播放链接操作日志");
        tMap.setPrimaryKeyMethod(TableMap.NATIVE);
        DB dbAdapter = Torque.getDB("soku_library");
        if (dbAdapter.getIDMethodType().equals(DB.SEQUENCE))
        {
            tMap.setPrimaryKeyMethodInfo("episode_log_SEQ");
        }
        else if (dbAdapter.getIDMethodType().equals(DB.AUTO_INCREMENT))
        {
            tMap.setPrimaryKeyMethodInfo("episode_log");
        }

        ColumnMap cMap = null;


  // ------------- Column: id --------------------
        cMap = new ColumnMap( "id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(true);
        cMap.setNotNull(true);
        cMap.setJavaName( "Id" );
        cMap.setAutoIncrement(true);
        cMap.setProtected(false);
        cMap.setDescription("Id，自增");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(1);
        tMap.addColumn(cMap);
  // ------------- Column: type --------------------
        cMap = new ColumnMap( "type", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "Type" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("操作类型，1添加、2删除");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(2);
        tMap.addColumn(cMap);
  // ------------- Column: cate --------------------
        cMap = new ColumnMap( "cate", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Cate" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("分类(电影，电视剧等)");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(3);
        tMap.addColumn(cMap);
  // ------------- Column: status --------------------
        cMap = new ColumnMap( "status", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "Status" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("状态， 是否处理过");
        cMap.setDefault("0");
        cMap.setInheritance("false");
        cMap.setSize( 1 );
        cMap.setPosition(4);
        tMap.addColumn(cMap);
  // ------------- Column: fk_programme_site_id --------------------
        cMap = new ColumnMap( "fk_programme_site_id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "FkProgrammeSiteId" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("站点表id");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(5);
        tMap.addColumn(cMap);
  // ------------- Column: title --------------------
        cMap = new ColumnMap( "title", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Title" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("原始视频名");
        cMap.setInheritance("false");
        cMap.setSize( 255 );
        cMap.setPosition(6);
        tMap.addColumn(cMap);
  // ------------- Column: order_id --------------------
        cMap = new ColumnMap( "order_id", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "OrderId" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("集数编号");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(7);
        tMap.addColumn(cMap);
  // ------------- Column: order_stage --------------------
        cMap = new ColumnMap( "order_stage", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(true);
        cMap.setJavaName( "OrderStage" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("节目中视频的集数或期数");
        cMap.setInheritance("false");
        cMap.setSize( 11 );
        cMap.setPosition(8);
        tMap.addColumn(cMap);
  // ------------- Column: logo --------------------
        cMap = new ColumnMap( "logo", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Logo" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("视频截图");
        cMap.setInheritance("false");
        cMap.setSize( 255 );
        cMap.setPosition(9);
        tMap.addColumn(cMap);
  // ------------- Column: seconds --------------------
        cMap = new ColumnMap( "seconds", tMap);
        cMap.setType( new Double(0) );
        cMap.setTorqueType( "FLOAT" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Seconds" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("时长");
        cMap.setInheritance("false");
        cMap.setPosition(10);
        tMap.addColumn(cMap);
  // ------------- Column: hd --------------------
        cMap = new ColumnMap( "hd", tMap);
        cMap.setType( new Integer(0) );
        cMap.setTorqueType( "INTEGER" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Hd" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("是否高清,1为高清");
        cMap.setDefault("0");
        cMap.setInheritance("false");
        cMap.setSize( 4 );
        cMap.setPosition(11);
        tMap.addColumn(cMap);
  // ------------- Column: url --------------------
        cMap = new ColumnMap( "url", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Url" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("视频url");
        cMap.setInheritance("false");
        cMap.setSize( 255 );
        cMap.setPosition(12);
        tMap.addColumn(cMap);
  // ------------- Column: operator --------------------
        cMap = new ColumnMap( "operator", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Operator" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("操作人，程序自动发现为空");
        cMap.setInheritance("false");
        cMap.setSize( 255 );
        cMap.setPosition(13);
        tMap.addColumn(cMap);
  // ------------- Column: update_time --------------------
        cMap = new ColumnMap( "update_time", tMap);
        cMap.setType( new Date() );
        cMap.setTorqueType( "TIMESTAMP" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "UpdateTime" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("更新时间");
        cMap.setInheritance("false");
        cMap.setPosition(14);
        tMap.addColumn(cMap);
  // ------------- Column: create_time --------------------
        cMap = new ColumnMap( "create_time", tMap);
        cMap.setType( new Date() );
        cMap.setTorqueType( "TIMESTAMP" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "CreateTime" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("创建时间");
        cMap.setInheritance("false");
        cMap.setPosition(15);
        tMap.addColumn(cMap);
  // ------------- Column: source --------------------
        cMap = new ColumnMap( "source", tMap);
        cMap.setType( "" );
        cMap.setTorqueType( "VARCHAR" );
        cMap.setUsePrimitive(true);
        cMap.setPrimaryKey(false);
        cMap.setNotNull(false);
        cMap.setJavaName( "Source" );
        cMap.setAutoIncrement(false);
        cMap.setProtected(false);
        cMap.setDescription("信息来源，1优酷版权、2站外版权、3、自动发现");
        cMap.setDefault("000");
        cMap.setInheritance("false");
        cMap.setSize( 3 );
        cMap.setPosition(16);
        tMap.addColumn(cMap);
        tMap.setUseInheritance(false);
    }
}
